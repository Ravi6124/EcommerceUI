{"remainingRequest":"/Users/priyapatel/Desktop/EcommerceUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priyapatel/Desktop/EcommerceUI/src/components/v-lazy-image.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priyapatel/Desktop/EcommerceUI/src/components/v-lazy-image.vue","mtime":1579499120522},{"path":"/Users/priyapatel/Desktop/EcommerceUI/node_modules/cache-loader/dist/cjs.js","mtime":1579494569988},{"path":"/Users/priyapatel/Desktop/EcommerceUI/node_modules/babel-loader/lib/index.js","mtime":1579494569750},{"path":"/Users/priyapatel/Desktop/EcommerceUI/node_modules/cache-loader/dist/cjs.js","mtime":1579494569988},{"path":"/Users/priyapatel/Desktop/EcommerceUI/node_modules/vue-loader/lib/index.js","mtime":1579494576275}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydzcmMnXSwKICBkYXRhOiAoKSA9PiAoeyBvYnNlcnZlcjogbnVsbCwgaW50ZXJzZWN0ZWQ6IGZhbHNlIH0pLAogIGNvbXB1dGVkOiB7CiAgICBzcmNJbWFnZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuaW50ZXJzZWN0ZWQgPyB0aGlzLnNyYyA6ICcnOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoZW50cmllcyA9PiB7CiAgICAgIGNvbnN0IGltYWdlID0gZW50cmllc1swXTsKICAgICAgaWYgKGltYWdlLmlzSW50ZXJzZWN0aW5nKSB7CiAgICAgICAgdGhpcy5pbnRlcnNlY3RlZCA9IHRydWU7CiAgICAgICAgdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgIH0KICAgIH0pOwoKICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRlbCk7CiAgfSwKICBkZXN0cm95ZWQoKSB7CiAgICB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICB9Cn0K"},{"version":3,"sources":["v-lazy-image.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"v-lazy-image.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <img :src=\"srcImage\" />\n</template>\n\n<script>\nexport default {\n  props: ['src'],\n  data: () => ({ observer: null, intersected: false }),\n  computed: {\n    srcImage() {\n      return this.intersected ? this.src : '';\n    }\n  },\n  mounted() {\n    this.observer = new IntersectionObserver(entries => {\n      const image = entries[0];\n      if (image.isIntersecting) {\n        this.intersected = true;\n        this.observer.disconnect();\n      }\n    });\n\n    this.observer.observe(this.$el);\n  },\n  destroyed() {\n    this.observer.disconnect();\n  }\n}\n</script>"]}]}